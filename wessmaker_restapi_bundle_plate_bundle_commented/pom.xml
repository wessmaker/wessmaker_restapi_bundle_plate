<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!--
       Licensed to the Apache Software Foundation (ASF) under one
       or more contributor license agreements.  See the NOTICE file
       distributed with this work for additional information
       regarding copyright ownership.  The ASF licenses this file
       to you under the Apache License, Version 2.0 (the
       "License"); you may not use this file except in compliance
       with the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing,
       software distributed under the License is distributed on an
       "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
       KIND, either express or implied.  See the License for the
       specific language governing permissions and limitations
       under the License.
    -->

    <modelVersion>4.0.0</modelVersion>
    <groupId>fi.wessmaker</groupId>
    <artifactId>wessmaker_restapi_bundle_plate_bundle_commented</artifactId>
    <version>1.0.0</version>
    <packaging>bundle</packaging>
    <name>wessmaker_restapi_bundle_plate_bundle Bundle</name>
    <description>
        Simple OSGI REST api implementation
    </description>



    <properties>
        <osgi.version>6.0.0</osgi.version>
        <maven-bundle-plugin.version>5.1.9</maven-bundle-plugin.version>
        <jackson.version>2.18.0</jackson.version>
        <!--This version of cxf i installed by default in karaf with feature:install cxf -->
        <cxf.version>3.6.4</cxf.version> 
    </properties>



    <dependencies>
        <!--
        org.osgi.core & cxf-rt-frontend-jaxrs are in "provided" scope
        "provided" dependencies have to be installed to karaf manually

        org.osgi.core is already "provided" by karaf itself
        cxf-rt-frontend-jaxrs is "provided" by "feature:install cxf"
        -->
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId> <!--"main" rest service dependency-->
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <version>${cxf.version}</version>
            <scope>provided</scope>
        </dependency>



        <!--
        jackson dependencies (embedded to this bundle)
        are used for REST JSON parsing
        -->
         <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
            <version>${jackson.version}</version>
            <scope>compile</scope>
        </dependency>

        <!--
        Provides class "JacksonJsonProvider"
        is used in Activator class with the "JAXRSServerFactoryBean"
        -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
    

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven-bundle-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Version>${project.version}</Bundle-Version>

                         <!--Here is declared the class which implements BundleActivator-->
                        <Bundle-Activator>fi.wessmaker.CustomActivator</Bundle-Activator>
                        <Export-Package>
                            fi.wessmaker <!--Exporting everything-->
                        </Export-Package>
                        <Import-Package>
                            * <!--Importing everything-->
                        </Import-Package>
                        <Embed-Dependency><!--Embedding bundles to not mess with custom karaf features-->
                            cxf-rt-frontend-jaxrs;scope=compile|runtime,
                            jackson-core;scope=compile|runtime,
                            jackson-databind;scope=compile|runtime,
                            jackson-annotations;scope=compile|runtime,
                            jackson-jaxrs-json-provider;scope=compile|runtime,
                            jackson-jaxrs-base;scope=compile|runtime,
                        </Embed-Dependency>
                        <!-- Embed transitive = true will allow bundle plugin to search for dependencies of dependencies and embed them -->
                        <Embed-Transitive>true</Embed-Transitive> 
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <maxmem>256M</maxmem>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>